---
- name: Create release directory
  file:
    path: '{{ deploy_helper.new_release_path }}'
    state: directory
    mode: u=rwX,g=rX,o=rX

# --------------------------------------------------
# Download and extract files into .../releases/{version} folder
# --------------------------------------------------

- name: Verify miarec_livemon binary presense
  stat:
    path: "{{ deploy_helper.new_release_path }}/miarec_livemon"
  register: miarec_livemon_bin_exists


- name: Download and Extract source package
  when: not miarec_livemon_bin_exists.stat.exists
  block:

    - name: Add an unfinished file, to allow cleanup on successful finalize
      file:
        path: '{{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }}'
        state: touch
        mode: "0644"

    - name: Download tarball
      get_url:
        url: "{{ miarec_livemon_download_base_url }}/{{ miarec_livemon_tarball_file }}"
        dest: "{{ miarec_livemon_download_dir }}/{{ miarec_livemon_tarball_file }}"
        mode: "0644"

    # unarchive must change the permissions of the destination folder when mode parameter is supplied.
    # But it behaves differently with tar.gz and zip archives.
    # When extracting tar.gz, it doesn't touch the destination folder's permissions.
    # While in case of extracting zip into something like /tmp/ with mode: 755, it overrides the permissions of /tmp to 755.
    # This step will create a direcoty specific to this role to extract files to
    - name: Create directory for extracted files
      file:
        path: "{{ miarec_livemon_download_dir }}/miarec_livemon-{{ miarec_livemon_version }}"
        state: directory
        mode: u=rwX,g=rX,o=rX
      register: _extract_dir

    - name: Untar the source package
      unarchive:
        src: "{{ miarec_livemon_download_dir }}/{{ miarec_livemon_tarball_file }}"
        dest: "{{ _extract_dir.path }}"
        creates: "{{ _extract_dir.path }}/miarec_livemon-{{ miarec_livemon_version }}/miarec_livemon"
        copy: false
        mode: u=rwX,g=rX,o=rX

    - name: Move the application files to releases folder
      shell: "mv {{ _extract_dir.path }}/miarec_livemon-{{ miarec_livemon_version }}/* {{ deploy_helper.new_release_path }}/"
      args:
        creates: "{{ deploy_helper.new_release_path }}/miarec_livemon"

# --------------------------------------------------
# Create required directory
# --------------------------------------------------
- name: Create working directory for the application
  file:
    path: '{{ miarec_livemon_work_dir }}'
    owner: '{{ miarec_livemon_bin_user }}'
    group: '{{ miarec_livemon_bin_group }}'
    state: directory
    mode: "0755"

- name: Create log directories for miarec
  file:
    path: '{{ item }}'
    owner: '{{ miarec_livemon_bin_user }}'
    group: '{{ miarec_livemon_bin_group }}'
    state: directory
    mode: "0755"
  with_items:
    - '{{ miarec_livemon_log_dir }}'

# --------------------------------------------------
# Configuration file miarec_livemon.ini
# --------------------------------------------------
- name: Configure miarec_livemon.ini file
  lineinfile:
    dest: "{{ deploy_helper.new_release_path }}/miarec_livemon.ini"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: '^port = '
      line: 'port = {{ miarec_livemon_rest_api_port }}'
    - regexp: '^log_file = '
      line: 'log_file = {{ miarec_livemon_log_dir }}/livemon.log'

  notify:
    - Reload miarec_livemon

# --------------------------------------------------
# Install service
# --------------------------------------------------
- name: Check for systemD
  fail:
    msg: "Only SystemD systems are supported at the moment"
  when: ansible_service_mgr != "systemd"


- name: Install miarec_livemon service | systemd
  template:
    src: "etc_systemd_system_miarec_livemon.service.j2"
    dest: "/etc/systemd/system/miarec_livemon.service"
    owner: root
    group: root
    mode: "0644"
  notify: Start miarec_livemon


- name: Enable miarec_livemon service | systemd or upstart
  service:
    name: miarec_livemon
    enabled: true

# Important! do not start the service right now. Postpone it until deploy_helper creates symbolic link to new release folder.

# --------------------------------------------------
# Cleanup
# --------------------------------------------------
- name: Clean up the downloaded files
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - "{{ miarec_livemon_download_dir }}/{{ miarec_livemon_tarball_file }}"
    - "{{ miarec_livemon_download_dir }}/{{ miarec_livemon_tarball_file }}.asc"
  when: miarec_livemon_cleanup_downloads|bool
